import React, { useState } from 'react';
import { StyleSheet, Text, View, TouchableOpacity, Switch } from 'react-native';

type ButtonType = 'C' | 'DEL' | '/' | '*' | '-' | '+' | '=' | '.' | '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';

const Calculator = () => {
  const [darkTheme, setDarkTheme] = useState(false);
  const [currentNumber, setCurrentNumber] = useState('');
  const [lastNumber, setLastNumber] = useState('');
  const [operation, setOperation] = useState<'+' | '-' | '*' | '/' | ''>('');
  const [isResultDisplayed, setIsResultDisplayed] = useState(false);

  const handleInput = (btnPressed: ButtonType) => {
    if (isResultDisplayed && btnPressed !== 'C' && btnPressed !== 'DEL') {
      if (btnPressed === '+' || btnPressed === '-' || btnPressed === '*' || btnPressed === '/') {
        setOperation(btnPressed);
        setCurrentNumber('');
        setLastNumber(currentNumber);
        setIsResultDisplayed(false);
      }
      return;
    }

    if (btnPressed === '+' || btnPressed === '-' || btnPressed === '*' || btnPressed === '/') {
      if (currentNumber === '' && lastNumber !== '') {
        setOperation(btnPressed);
        return;
      } else if (currentNumber !== '') {
        setLastNumber(currentNumber);
        setOperation(btnPressed);
        setCurrentNumber('');
      }
      return;
    }

    switch (btnPressed) {
      case 'DEL':
        setCurrentNumber(currentNumber.substring(0, currentNumber.length - 1));
        return;
      case 'C':
        setLastNumber('');
        setCurrentNumber('');
        setOperation('');
        setIsResultDisplayed(false);
        return;
      case '=':
        try {
          const expression = lastNumber + operation + currentNumber;
          const result = eval(expression);
          setLastNumber(expression + '=');
          setCurrentNumber(result.toString());
          setIsResultDisplayed(true);
          setOperation('');
        } catch (error) {
          setCurrentNumber('Error');
        }
        return;
    }

    setCurrentNumber(currentNumber + btnPressed);
  };

  const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: darkTheme ? '#22252D' : '#F5F5F5',
    },
    resultContainer: {
      flex: 2,
      justifyContent: 'flex-end',
      alignItems: 'flex-end',
      backgroundColor: darkTheme ? '#22252D' : '#F5F5F5',
    },
    themeToggleContainer: {
      flexDirection: 'row',
      justifyContent: 'flex-start',
      paddingHorizontal: 20,
      paddingTop: 40,
    },
    resultText: {
      color: darkTheme ? '#FFFFFF' : '#22252D',
      fontSize: 30,
      fontWeight: 'bold',
      padding: 20,
    },
    historyText: {
      color: darkTheme ? '#B5B7BB' : '#7C7C7C',
      fontSize: 20,
      marginRight: 10,
      alignSelf: 'flex-end',
    },
    buttonsContainer: {
      flex: 3,
      flexDirection: 'column',
      justifyContent: 'space-between',
    },
    buttonRow: {
      flexDirection: 'row',
      flex: 1,
    },
    button: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0.5,
      borderColor: darkTheme ? '#3F4D5B' : '#E5E5E5',
    },
    buttonSpan2: {
      flex: 1.5,
      
    },
    textButton: {
      color: darkTheme ? '#FFFFFF' : '#7C7C7C',
      fontSize: 28,
    },
    specialButton: {
      backgroundColor: '#00B9FF',
    },
    normalButton: {
      backgroundColor: darkTheme ? '#292D36' : '#FFFFFF',
      alignContent: 'center',
    },
    equalButton: {
      backgroundColor: '#00B9FF',
    },
  });

  return (
    <View style={styles.container}>
      <View style={styles.themeToggleContainer}>
        <Text style={{ color: darkTheme ? '#FFFFFF' : '#22252D' }}>‚òÄÔ∏è</Text>
        <Switch
          value={darkTheme}
          onValueChange={() => setDarkTheme(!darkTheme)}
          thumbColor={darkTheme ? '#FFFFFF' : '#22252D'}
          trackColor={{ false: '#767577', true: '#3F4D5B' }}
        />
        <Text style={{ color: darkTheme ? '#FFFFFF' : '#22252D' }}>üåô</Text>
      </View>
      <View style={styles.resultContainer}>
        <Text style={styles.historyText}>{lastNumber}</Text>
        <Text style={styles.resultText}>{currentNumber}</Text>
      </View>
      <View style={styles.buttonsContainer}>
        {/* H√†ng 1 */}
        <View style={styles.buttonRow}>
          <TouchableOpacity
            style={[styles.button, styles.buttonSpan2]}
            onPress={() => handleInput('C')}
          >
            <Text style={styles.textButton}>C</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton, styles.buttonSpan2]}
            onPress={() => handleInput('DEL')}
          >
            <Text style={styles.textButton}>DEL</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton, styles.specialButton]}
            onPress={() => handleInput('/')}
          >
            <Text style={styles.textButton}>/</Text>
          </TouchableOpacity>
        </View>

        {/* H√†ng 2 */}
        <View style={styles.buttonRow}>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('7')}
          >
            <Text style={styles.textButton}>7</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('8')}
          >
            <Text style={styles.textButton}>8</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('9')}
          >
            <Text style={styles.textButton}>9</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.specialButton]}
            onPress={() => handleInput('*')}
          >
            <Text style={styles.textButton}>*</Text>
          </TouchableOpacity>
        </View>

        {/* H√†ng 3 */}
        <View style={styles.buttonRow}>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('4')}
          >
            <Text style={styles.textButton}>4</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('5')}
          >
            <Text style={styles.textButton}>5</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('6')}
          >
            <Text style={styles.textButton}>6</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.specialButton]}
            onPress={() => handleInput('-')}
          >
            <Text style={styles.textButton}>-</Text>
          </TouchableOpacity>
        </View>

        {/* H√†ng 4 */}
        <View style={styles.buttonRow}>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('1')}
          >
            <Text style={styles.textButton}>1</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('2')}
          >
            <Text style={styles.textButton}>2</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.normalButton]}
            onPress={() => handleInput('3')}
          >
            <Text style={styles.textButton}>3</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.specialButton]}
            onPress={() => handleInput('+')}
          >
            <Text style={styles.textButton}>+</Text>
          </TouchableOpacity>
        </View>

        {/* H√†ng 5 */}
        <View style={styles.buttonRow}>
          <TouchableOpacity
            style={[styles.button, styles.buttonSpan2]}
            onPress={() => handleInput('0')}
          >
            <Text style={styles.textButton}>0</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.buttonSpan2, styles.normalButton]}
            onPress={() => handleInput('.')}
          >
            <Text style={styles.textButton}>.</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.button, styles.specialButton]}
            onPress={() => handleInput('=')}
          >
            <Text style={styles.textButton}>=</Text>
          </TouchableOpacity>
        </View>
      </View>
    </View>
  );
};

export default Calculator;
